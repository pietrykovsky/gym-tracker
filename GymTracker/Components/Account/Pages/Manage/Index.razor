@page "/account/manage"

@using System.ComponentModel.DataAnnotations
@using Microsoft.AspNetCore.Identity
@using GymTracker.Data

@inject UserManager<ApplicationUser> UserManager
@inject SignInManager<ApplicationUser> SignInManager
@inject IdentityUserAccessor UserAccessor
@inject IdentityRedirectManager RedirectManager

<PageTitle>Profile</PageTitle>

<h3>Profile</h3>
<StatusMessage />

<div class="row">
    <div class="col-md-6">
        <EditForm Model="UserInput" FormName="profile" OnValidSubmit="OnValidSubmitAsync" method="post">
            <DataAnnotationsValidator />
            <div class="form-floating mb-3">
                <InputText @bind-Value="UserInput.FirstName" class="form-control" />
                <label for="first-name">First Name</label>
                <ValidationMessage For="() => UserInput.FirstName" class="text-danger" />
            </div>
            <div class="form-floating mb-3">
                <InputText @bind-Value="UserInput.LastName" class="form-control" />
                <label for="last-name">Last Name</label>
                <ValidationMessage For="() => UserInput.LastName" class="text-danger" />
            </div>
            <button type="submit" class="w-100 btn btn-lg btn-primary">Save</button>
        </EditForm>
    </div>
</div>


@code {
    private ApplicationUser User = default!;

    [SupplyParameterFromForm]
    private InputModel UserInput { get; set; } = new();

    [CascadingParameter]
    private HttpContext HttpContext { get; set; } = default!;

    protected override async Task OnInitializedAsync()
    {
        User = await UserAccessor.GetRequiredUserAsync(HttpContext);
        UserInput.FirstName ??= User.FirstName;
        UserInput.LastName ??= User.LastName;
    }

    private async Task OnValidSubmitAsync()
    {
        User.FirstName = UserInput.FirstName!;
        User.LastName = UserInput.LastName!;
        await UserManager.UpdateAsync(User);
        await SignInManager.RefreshSignInAsync(User);
        RedirectManager.RedirectToCurrentPageWithStatus("Your profile has been updated", HttpContext);
    }

    private sealed class InputModel
    {
        [Required]
        [StringLength(20, MinimumLength = 2, ErrorMessage = "First name must be between 2 and 20 characters")]
        [RegularExpression(@"^[a-zA-Z\s\-']+$", ErrorMessage = "First name can only contain letters, spaces, hyphens and apostrophes")]
        [Display(Name = "first name")]
        public string? FirstName { get; set; }

        [Required]
        [StringLength(30, MinimumLength = 2, ErrorMessage = "Last name must be between 2 and 30 characters")]
        [RegularExpression(@"^[a-zA-Z\s\-']+$", ErrorMessage = "Last name can only contain letters, spaces, hyphens and apostrophes")]
        [Display(Name = "last name")]
        public string? LastName { get; set; }
    }
}
